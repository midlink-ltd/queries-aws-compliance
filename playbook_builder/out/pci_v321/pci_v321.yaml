connections:
  aws: aws_connection
desc: ''
inputs:
  send_notif:
    default: true
    display_name: Send Slack Notification
    required: true
    type: checkbox
name: pci_v321
outputs:
  Pci_v321_autoscaling: '{{steps.S1.output}}'
  Pci_v321_cloudtrail: '{{steps.S2.output}}'
  Pci_v321_codebuild: '{{steps.S3.output}}'
  Pci_v321_config: '{{steps.S4.output}}'
  Pci_v321_cw: '{{steps.S5.output}}'
  Pci_v321_dms: '{{steps.S6.output}}'
  Pci_v321_ec2: '{{steps.S7.output}}'
  Pci_v321_elbv2: '{{steps.S8.output}}'
  Pci_v321_es: '{{steps.S9.output}}'
  Pci_v321_guardduty: '{{steps.S10.output}}'
  Pci_v321_iam: '{{steps.S11.output}}'
  Pci_v321_kms: '{{steps.S12.output}}'
  Pci_v321_lambda: '{{steps.S13.output}}'
  Pci_v321_rds: '{{steps.S14.output}}'
  Pci_v321_redshift: '{{steps.S15.output}}'
  Pci_v321_s3: '{{steps.S16.output}}'
  Pci_v321_sagemaker: '{{steps.S17.output}}'
  Pci_v321_ssm: '{{steps.S18.output}}'
  check_name: pci_v321
  execution_url: '{{execution_url}}'
steps:
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_autoscaling
  desc: Description
  id: S1
  inputs:
    send_notif: false
  name: Pci_v321_autoscaling
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_cloudtrail
  desc: Description
  id: S2
  inputs:
    send_notif: false
  name: Pci_v321_cloudtrail
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_codebuild
  desc: Description
  id: S3
  inputs:
    send_notif: false
  name: Pci_v321_codebuild
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_config
  desc: Description
  id: S4
  inputs:
    send_notif: false
  name: Pci_v321_config
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_cw
  desc: Description
  id: S5
  inputs:
    send_notif: false
  name: Pci_v321_cw
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_dms
  desc: Description
  id: S6
  inputs:
    send_notif: false
  name: Pci_v321_dms
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_ec2
  desc: Description
  id: S7
  inputs:
    send_notif: false
  name: Pci_v321_ec2
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_elbv2
  desc: Description
  id: S8
  inputs:
    send_notif: false
  name: Pci_v321_elbv2
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_es
  desc: Description
  id: S9
  inputs:
    send_notif: false
  name: Pci_v321_es
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_guardduty
  desc: Description
  id: S10
  inputs:
    send_notif: false
  name: Pci_v321_guardduty
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_iam
  desc: Description
  id: S11
  inputs:
    send_notif: false
  name: Pci_v321_iam
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_kms
  desc: Description
  id: S12
  inputs:
    send_notif: false
  name: Pci_v321_kms
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_lambda
  desc: Description
  id: S13
  inputs:
    send_notif: false
  name: Pci_v321_lambda
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_rds
  desc: Description
  id: S14
  inputs:
    send_notif: false
  name: Pci_v321_rds
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_redshift
  desc: Description
  id: S15
  inputs:
    send_notif: false
  name: Pci_v321_redshift
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_s3
  desc: Description
  id: S16
  inputs:
    send_notif: false
  name: Pci_v321_s3
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_sagemaker
  desc: Description
  id: S17
  inputs:
    send_notif: false
  name: Pci_v321_sagemaker
- desc: example description delete afterwards
  text: '# '
- text: ' '
- action: playbooks.Pci_v321_ssm
  desc: Description
  id: S18
  inputs:
    send_notif: false
  name: Pci_v321_ssm
- desc: ' '
  text: '# Send Report to communication channel'
- action: core.python
  desc: Description
  id: FormatResult
  inputs:
    code: "from dotmap import DotMap\nfrom datetime import date\nimport json\n\ndef\
      \ getChildMessage(child):\n  result = []\n  title = DotMap()\n  title.type =\
      \ \"section\"\n  title.text = DotMap()\n  title.text.type = \"mrkdwn\"\n  title.text.text\
      \ = \":point_right: :point_right: |   *\"+ child.check_name +\" Checks*  | <\"\
      \ + child.execution_url + \"| *Full Report Here*>\"\n  \n  result.append({\"\
      type\":\"divider\"})\n  result.append(title.toDict().copy())\n  \n  for stepId\
      \ in child:\n    output = child[stepId]\n    if stepId != \"check_name\" and\
      \ stepId != \"execution_url\":\n      section = DotMap()\n      section.type\
      \ = \"section\"\n      section.text = DotMap()\n      section.text.type = \"\
      mrkdwn\"\n      section.text.text = \"\"\n      if output.isAlarm:\n       \
      \ section.text.text +=  \":x: \"\n      else:\n         section.text.text +=\
      \  \":white_check_mark: \"\n        \n      section.text.text += output.name[:82]\
      \ + \"\\n\" if len(output.name) > 82 else output.name\n      \n      result.append(section.toDict().copy())\n\
      \  \n  return result\n\n\n\n#main\n\ntoday = \"*\" + str(date.today()) +\"*\"\
      \n\nmessage_blocks = []\nexecution_url = context.server_environment_url + \"\
      /workspace/\" + context.workspace_id + \"/playbooks/library/playbook?id=\" +\
      \ context.playbook_id + \"&execution=\" + context.execution_id \nheader = {\"\
      type\": \"header\", \"text\": {\"type\": \"plain_text\",\"text\": \":speaker:\
      \  pci_v321  :speaker:\"}}\ncontext_section = {\"type\":\"context\",\"elements\"\
      :[{\"text\": today+\" |  pci_v321 Check results \",\"type\":\"mrkdwn\"}]}\n\
      blink_execution = {\"type\":\"section\",\"text\":{\"text\": \":point_right:\
      \ <\" + execution_url + \"| *Full report available in Blink*>\" ,\"type\":\"\
      mrkdwn\"}}\nmessage_blocks.append(header)\nmessage_blocks.append(context_section)\n\
      message_blocks.append(blink_execution)\n\nstep_ids = ['S1', 'S2', 'S3', 'S4',\
      \ 'S5', 'S6', 'S7', 'S8', 'S9', 'S10', 'S11', 'S12', 'S13', 'S14', 'S15', 'S16',\
      \ 'S17', 'S18']\nfor id in step_ids:\n  if context.steps[id].status == 'OK':\n\
      \    message_blocks.append({\"type\":\"divider\"})\n\n    checkHeader = DotMap()\n\
      \    checkHeader.type = \"section\"\n    checkHeader.text = DotMap()\n    checkHeader.text.type\
      \ = \"mrkdwn\"\n    checkHeader.text.text = \":point_right: |   *\"+ context.steps[id].output.check_name\
      \ +\" Checks*  | <\" + context.steps[id].output.execution_url + \"| *Full Report\
      \ Here*>\"\n    message_blocks.append(checkHeader.toDict().copy())\n    \n \
      \   for stepId in context.steps[id].output:\n      output = context.steps[id].output[stepId]\n\
      \      if stepId != \"check_name\" and stepId != \"execution_url\":\n      \
      \  if \"details\" in output:          \n          section = DotMap()\n     \
      \     section.type = \"section\"\n          section.text = DotMap()\n      \
      \    section.text.type = \"mrkdwn\"\n          section.text.text = \"\"\n  \
      \        if output.isAlarm:\n            section.text.text +=  \":x: \"\n  \
      \        else:\n            section.text.text +=  \":white_check_mark: \"\n\
      \        \n          section.text.text += output.name[:82] + \"\\n\" if len(output.name)\
      \ > 82 else output.name\n          message_blocks.append(section.toDict().copy())\n\
      \        else:\n          test = getChildMessage(output)\n          message_blocks.extend(test)\n\
      \n  \nprint(json.dumps(message_blocks))"
  name: Format Final Result
- action: slack.SendMessage
  connections:
    slack: slack_connection
  id: SendResult
  inputs:
    Blocks: '{{steps.FormatResult.output}}'
    Channel: random
    Text: ''
  name: Send report to clack channel
  when: '{{inputs.send_notif}}'
tags:
- AWS
- Compliance
- pci_v321
- aws
type: Subflow.playbook
