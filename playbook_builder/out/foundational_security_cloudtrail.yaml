connections:
  aws: ''
desc: ''
name: '"foundational_security_cloudtrail"'
steps:
- desc: example description delete afterwards
  text: '#5 Ensure CloudTrail trails are integrated with Amazon CloudWatch Logs'
- action: core.sql
  desc: Description
  id: S1
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ log_group_arn != 'null' and ((latest_delivery_time) > current_date - 1) then\
      \ 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when log_group_arn !=\
      \ 'null' and ((latest_delivery_time) > current_date - 1) then title || ' integrated\
      \ with CloudWatch logs.'\n    else title || ' not integrated with CloudWatch\
      \ logs.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n  account_id\n\
      from\n  aws_cloudtrail_trail;"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S2
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S1.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
- desc: example description delete afterwards
  text: '#5 Ensure CloudTrail trails are integrated with Amazon CloudWatch Logs'
- action: core.sql
  desc: Description
  id: S3
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ log_group_arn != 'null' and ((latest_delivery_time) > current_date - 1) then\
      \ 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when log_group_arn !=\
      \ 'null' and ((latest_delivery_time) > current_date - 1) then title || ' integrated\
      \ with CloudWatch logs.'\n    else title || ' not integrated with CloudWatch\
      \ logs.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n  account_id\n\
      from\n  aws_cloudtrail_trail;"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S4
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S3.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
- desc: example description delete afterwards
  text: '#5 Ensure CloudTrail trails are integrated with Amazon CloudWatch Logs'
- action: core.sql
  desc: Description
  id: S5
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ log_group_arn != 'null' and ((latest_delivery_time) > current_date - 1) then\
      \ 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when log_group_arn !=\
      \ 'null' and ((latest_delivery_time) > current_date - 1) then title || ' integrated\
      \ with CloudWatch logs.'\n    else title || ' not integrated with CloudWatch\
      \ logs.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n  account_id\n\
      from\n  aws_cloudtrail_trail;"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S6
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S5.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
- desc: example description delete afterwards
  text: '#5 Ensure CloudTrail trails are integrated with Amazon CloudWatch Logs'
- action: core.sql
  desc: Description
  id: S7
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ log_group_arn != 'null' and ((latest_delivery_time) > current_date - 1) then\
      \ 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when log_group_arn !=\
      \ 'null' and ((latest_delivery_time) > current_date - 1) then title || ' integrated\
      \ with CloudWatch logs.'\n    else title || ' not integrated with CloudWatch\
      \ logs.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n  account_id\n\
      from\n  aws_cloudtrail_trail;"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S8
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S7.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
tags: []
type: Flow
