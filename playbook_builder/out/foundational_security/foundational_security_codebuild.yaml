connections:
  aws: aws_connection
desc: This section contains recommendations for configuring CodeBuild resources and
  options.
inputs:
  send_notif:
    default: true
    display_name: Send Slack Notification
    required: true
    type: checkbox
name: foundational_security_codebuild
outputs:
  S2: '{{steps.S2.output}}'
  S4: '{{steps.S4.output}}'
  check_name: foundational_security_codebuild
  execution_url: '{{execution_url}}'
steps:
- desc: example description delete afterwards
  text: '#1 CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
    - Not implemented'
- text: Authentication credentials should never be stored or transmitted in clear
    text or appear in the repository URL. Instead of personal access tokens or user
    name and password, you should use OAuth to grant authorization for accessing GitHub
    or Bitbucket repositories. Using personal access tokens or a user name and password
    could expose your credentials to unintended data exposure and unauthorized access.
- action: core.sql
  desc: Description
  id: S1
  inputs:
    sql: Select * from true
  name: Perform the query
  when: 'False'
- action: core.python
  desc: Description
  id: S2
  inputs:
    code: 'from dotmap import DotMap

      import json

      filtered_on_alarm = [x for x in context.steps.S1.output.rows if ( x[context.steps.S1.output.columns.index(''status'')]
      == ''alarm'' )]


      check = DotMap()


      check.isAlarm = len(filtered_on_alarm) > 0

      check.details = context.steps.S1.output.rows

      check.name = "1 CodeBuild GitHub or Bitbucket source repository URLs should
      use OAuth"

      check.severity = "critical"


      print(json.dumps(check.toDict()))'
  name: Format Result
  when: 'False'
- desc: example description delete afterwards
  text: '#2 CodeBuild project environment variables should not contain clear text
    credentials - Not implemented'
- text: This control checks whether the project contains the environment variables
    AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY. Authentication credentials AWS_ACCESS_KEY_ID
    and AWS_SECRET_ACCESS_KEY should never be stored in clear text, as this could
    lead to unintended data exposure and unauthorized access.
- action: core.sql
  desc: Description
  id: S3
  inputs:
    sql: Select * from true
  name: Perform the query
  when: 'False'
- action: core.python
  desc: Description
  id: S4
  inputs:
    code: 'from dotmap import DotMap

      import json

      filtered_on_alarm = [x for x in context.steps.S3.output.rows if ( x[context.steps.S3.output.columns.index(''status'')]
      == ''alarm'' )]


      check = DotMap()


      check.isAlarm = len(filtered_on_alarm) > 0

      check.details = context.steps.S3.output.rows

      check.name = "2 CodeBuild project environment variables should not contain clear
      text credentials"

      check.severity = "critical"


      print(json.dumps(check.toDict()))'
  name: Format Result
  when: 'False'
- desc: ' '
  text: '# Send Report to communication channel'
- action: core.python
  desc: Description
  id: FormatResult
  inputs:
    code: "from dotmap import DotMap\nfrom datetime import date\nimport json\n\ntoday\
      \ = \"*\" + str(date.today()) +\"*\"\n\nmessage_blocks = []\nexecution_url =\
      \ context.server_environment_url + \"/workspace/\" + context.workspace_id +\
      \ \"/playbooks/library/playbook?id=\" + context.playbook_id + \"&execution=\"\
      \ + context.execution_id \nheader = {\"type\": \"header\", \"text\": {\"type\"\
      : \"plain_text\",\"text\": \":speaker:  foundational_security_codebuild  :speaker:\"\
      }}\ncontext_section = {\"type\":\"context\",\"elements\":[{\"text\": today+\"\
      \ |  foundational_security_codebuild Check results \",\"type\":\"mrkdwn\"}]}\n\
      blink_execution = {\"type\":\"section\",\"text\":{\"text\": \":point_right:\
      \ <\" + execution_url + \"| *Full report available in Blink*>\" ,\"type\":\"\
      mrkdwn\"}}\nmessage_blocks.append(header)\nmessage_blocks.append(context_section)\n\
      message_blocks.append(blink_execution)\n\nstep_ids = ['S2', 'S4']\nfor id in\
      \ step_ids:\n  if context.steps[id].status == 'OK':\n    message_blocks.append({\"\
      type\":\"divider\"})\n    \n    section = DotMap()\n    section.type = \"section\"\
      \n    section.text = DotMap()\n    section.text.type = \"mrkdwn\"\n    section.text.text\
      \ = \"\"\n    if context.steps[id].output.isAlarm:\n      section.text.text\
      \ +=  \":x: \"\n    else:\n       section.text.text +=  \":white_check_mark:\
      \ \"\n    \n    section.text.text += context.steps[id].output.name[:82] + \"\
      \\n\" if len(context.steps[id].output.name) > 82 else context.steps[id].output.name\n\
      \    \n\n    message_blocks.append(section.toDict().copy())\n\n  \nprint(json.dumps(message_blocks))"
  name: Format Final Result
- action: slack.SendMessage
  connections:
    slack: slack_connection
  id: SendResult
  inputs:
    Blocks: '{{steps.FormatResult.output}}'
    Channel: random
    Text: ''
  name: Send report to clack channel
  when: '{{inputs.send_notif}}'
tags:
- AWS
- Compliance
- codebuild
type: Subflow.playbook
