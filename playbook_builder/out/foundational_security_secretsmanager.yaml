connections:
  aws: ''
desc: ''
name: '"foundational_security_secretsmanager"'
steps:
- desc: example description delete afterwards
  text: '#4 Secrets Manager secrets should be rotated within a specified number of
    days'
- action: core.sql
  desc: Description
  id: S1
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ rotation_rules is not null and rotation_lambda_arn is not null then 'ok'\n\
      \    else 'alarm'\n  end as status,\n  case\n    when rotation_rules is not\
      \ null and rotation_lambda_arn is not null then title || ' scheduled for rotation\
      \ using Lambda function.'\n    else title || ' automatic rotation using Lambda\
      \ function disabled.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n\
      \  account_id\nfrom\n  aws_secretsmanager_secret;\n"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S2
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S1.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
- desc: example description delete afterwards
  text: '#4 Secrets Manager secrets should be rotated within a specified number of
    days'
- action: core.sql
  desc: Description
  id: S3
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ rotation_rules is not null and rotation_lambda_arn is not null then 'ok'\n\
      \    else 'alarm'\n  end as status,\n  case\n    when rotation_rules is not\
      \ null and rotation_lambda_arn is not null then title || ' scheduled for rotation\
      \ using Lambda function.'\n    else title || ' automatic rotation using Lambda\
      \ function disabled.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n\
      \  account_id\nfrom\n  aws_secretsmanager_secret;\n"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S4
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S3.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
- desc: example description delete afterwards
  text: '#4 Secrets Manager secrets should be rotated within a specified number of
    days'
- action: core.sql
  desc: Description
  id: S5
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ rotation_rules is not null and rotation_lambda_arn is not null then 'ok'\n\
      \    else 'alarm'\n  end as status,\n  case\n    when rotation_rules is not\
      \ null and rotation_lambda_arn is not null then title || ' scheduled for rotation\
      \ using Lambda function.'\n    else title || ' automatic rotation using Lambda\
      \ function disabled.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n\
      \  account_id\nfrom\n  aws_secretsmanager_secret;\n"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S6
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S5.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
- desc: example description delete afterwards
  text: '#4 Secrets Manager secrets should be rotated within a specified number of
    days'
- action: core.sql
  desc: Description
  id: S7
  inputs:
    sql: " \n select\n  -- Required Columns\n  arn as resource,\n  case\n    when\
      \ rotation_rules is not null and rotation_lambda_arn is not null then 'ok'\n\
      \    else 'alarm'\n  end as status,\n  case\n    when rotation_rules is not\
      \ null and rotation_lambda_arn is not null then title || ' scheduled for rotation\
      \ using Lambda function.'\n    else title || ' automatic rotation using Lambda\
      \ function disabled.'\n  end as reason,\n  -- Additional Dimensions\n  region,\n\
      \  account_id\nfrom\n  aws_secretsmanager_secret;\n"
  name: Perform the query
- action: slack.SendFile
  connections:
    slack: slack_connection
  desc: Description
  id: S8
  inputs:
    Channel: demo
    Content: '{{table_to_csv(steps.S7.output)}}'
    File name: ''
    File type: csv
  name: Send report to Slack
tags: []
type: Flow
